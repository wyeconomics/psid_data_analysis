ind_filename <- list.files(path = indir, pattern = "ind.*\\.rda")
#| echo: true
#| message: false
library(tidyverse)
load('data/fam2021er.rda')
head(fam2021er)
#| echo: true
library(psidread)
psid_varlist = c(" hh_age || [13]ER53017 [17]ER66017",
" p_age || [13]ER34204")
psid_str(varlist = psid_varlist)
#| echo: true
library(psidread)
input_directory <- 'data'
output_directory <- 'data'
str_df <- psid_str(
varlist = c('pair_id || 	[68]ER30005 [69]ER30024 [70]ER30047 [71]ER30071 [72]ER30095 [73]ER30121 [74]ER30142 [75]ER30164 [76]ER30192 [77]ER30221 [78]ER30250 [79]ER30287 [80]ER30317 [81]ER30347 [82]ER30377 [83]ER30405 [84]ER30435 [85]ER30469 [86]ER30504 [87]ER30541 [88]ER30576 [89]ER30612 [90]ER30648 [91]ER30695 [92]ER30739 [93]ER30812 [94]ER33107 [95]ER33207 [96]ER33307 [97]ER33407 [99]ER33507 [01]ER33607 [03]ER33707 [05]ER33807 [07]ER33907 [09]ER34007 [11]ER34107 [13]ER34207 [15]ER34308 [17]ER34507 [19]ER34707 [21]ER34907',
'hh_marst_old || [68]V239 [69]V607 [70]V1365 [71]V2072 [72]V2670 [73]V3181 [74]V3598 [75]V4053 [76]V4603 [77]V5650 [78]V6197 [79]V6790 [80]V7435 [81]V8087 [82]V8711 [83]V9419 [84]V11065 [85]V12426 [86]V13665 [87]V14712 [88]V16187 [89]V17565 [90]V18916 [91]V20216 [92]V21522 [93]V23336 [94]ER4159A [95]ER6999A [96]ER9250A [97]ER12223A [99]ER16423 [01]ER20369 [03]ER24150 [05]ER28049 [07]ER41039 [09]ER46983 [11]ER52407 [13]ER58225 [15]ER65461 [17]ER71540 [19]ER77601 [21]ER81928',
'hh_marst || [77]V5502 [78]V6034 [79]V6659 [80]V7261 [81]V7952 [82]V8603 [83]V9276 [84]V10426 [85]V11612 [86]V13017 [87]V14120 [88]V15136 [89]V16637 [90]V18055 [91]V19355 [92]V20657 [93]V22412 [94]ER2014 [95]ER5013 [96]ER7013 [97]ER10016 [99]ER13021 [01]ER17024 [03]ER21023 [05]ER25023 [07]ER36023 [09]ER42023 [11]ER47323 [13]ER53023 [15]ER60024 [17]ER66024 [19]ER72024 [21]ER78025',
'fam_comp_change || [69]V542 [70]V1109 [71]V1809 [72]V2410 [73]V3010 [74]V3410 [75]V3810 [76]V4310 [77]V5210 [78]V5710 [79]V6310 [80]V6910 [81]V7510 [82]V8210 [83]V8810 [84]V10010 [85]V11112 [86]V12510 [87]V13710 [88]V14810 [89]V16310 [90]V17710 [91]V19010 [92]V20310 [93]V21608 [94]ER2005A [95]ER5004A [96]ER7004A [97]ER10004A [99]ER13008A [01]ER17007 [03]ER21007 [05]ER25007 [07]ER36007 [09]ER42007 [11]ER47307 [13]ER53007 [15]ER60007 [17]ER66007 [19]ER72007 [21]ER78007',
'marst_change || [77]V5680 [78]V6219 [79]V6812 [80]V7455 [81]V8107 [82]V8731 [83]V9420 [84]V11066 [85]V12427 [86]V13666 [87]V14713 [88]V16188 [89]V17566 [90]V18917 [91]V20217 [92]V21523 [93]V23337 [94]ER4159B [95]ER6999B [96]ER9250B [97]ER12223B [99]ER16424 [01]ER20370 [03]ER24151 [05]ER28050 [07]ER41040 [09]ER46984 [11]ER52408 [13]ER58226 [15]ER65462 [17]ER71541 [19]ER77602 [21]ER81929',
'state || [68]V93 [69]V537 [70]V1103 [71]V1803 [72]V2403 [73]V3003 [74]V3403 [75]V3803 [76]V4303 [77]V5203 [78]V5703 [79]V6303 [80]V6903 [81]V7503 [82]V8203 [83]V8803 [84]V10003 [85]V11103 [86]V12503 [87]V13703 [88]V14803 [89]V16303 [90]V17703 [91]V19003 [92]V20303 [93]V21603 [94]ER4156 [95]ER6996 [96]ER9247 [97]ER12221 [99]ER13004 [01]ER17004 [03]ER21003 [05]ER25003 [07]ER36003 [09]ER42003 [11]ER47303 [13]ER53003 [15]ER60003 [17]ER66003 [19]ER72003 [21]ER78003'
)
)
#| echo: true
head(str_df)
#| echo: true
#| error: true
psid_df <- psid_read(indir = output_directory,
str_df = str_df,
idvars = c('ER30000'),
type = 'package',
filename = NA)
#| echo: false
indir <- output_directory
idvars <- c('ER30000')
year_toread <- str_df$year
varlist_toread <- unname(unlist(str_df[,c(2:ncol(str_df))]))
varlist_toread <- varlist_toread[!is.na(varlist_toread)]
temp_env <- new.env()
# Table of key for match
temp_env$key_tb <- psid_str(varlist = c("xsqnr || 	[69]ER30021 [70]ER30044 [71]ER30068 [72]ER30092 [73]ER30118 [74]ER30139 [75]ER30161 [76]ER30189 [77]ER30218 [78]ER30247 [79]ER30284 [80]ER30314 [81]ER30344 [82]ER30374 [83]ER30400 [84]ER30430 [85]ER30464 [86]ER30499 [87]ER30536 [88]ER30571 [89]ER30607 [90]ER30643 [91]ER30690 [92]ER30734 [93]ER30807 [94]ER33102 [95]ER33202 [96]ER33302 [97]ER33402 [99]ER33502 [01]ER33602 [03]ER33702 [05]ER33802 [07]ER33902 [09]ER34002 [11]ER34102 [13]ER34202 [15]ER34302 [17]ER34502 [19]ER34702 [21]ER34902",
"rel2hh || [68]ER30003 [69]ER30022 [70]ER30045 [71]ER30069 [72]ER30093 [73]ER30119 [74]ER30140 [75]ER30162 [76]ER30190 [77]ER30219 [78]ER30248 [79]ER30285 [80]ER30315 [81]ER30345 [82]ER30375 [83]ER30401 [84]ER30431 [85]ER30465 [86]ER30500 [87]ER30537 [88]ER30572 [89]ER30608 [90]ER30644 [91]ER30691 [92]ER30735 [93]ER30808 [94]ER33103 [95]ER33203 [96]ER33303 [97]ER33403 [99]ER33503 [01]ER33603 [03]ER33703 [05]ER33803 [07]ER33903 [09]ER34003 [11]ER34103 [13]ER34203 [15]ER34303 [17]ER34503 [19]ER34703 [21]ER34903",
"indfid || [68]ER30001 [69]ER30020 [70]ER30043 [71]ER30067 [72]ER30091 [73]ER30117 [74]ER30138 [75]ER30160 [76]ER30188 [77]ER30217 [78]ER30246 [79]ER30283 [80]ER30313 [81]ER30343 [82]ER30373 [83]ER30399 [84]ER30429 [85]ER30463 [86]ER30498 [87]ER30535 [88]ER30570 [89]ER30606 [90]ER30642 [91]ER30689 [92]ER30733 [93]ER30806 [94]ER33101 [95]ER33201 [96]ER33301 [97]ER33401 [99]ER33501 [01]ER33601 [03]ER33701 [05]ER33801 [07]ER33901 [09]ER34001 [11]ER34101 [13]ER34201 [15]ER34301 [17]ER34501 [19]ER34701 [21]ER34901",
"famfid || [68]V3 [69]V442 [70]V1102 [71]V1802 [72]V2402 [73]V3002 [74]V3402 [75]V3802 [76]V4302 [77]V5202 [78]V5702 [79]V6302 [80]V6902 [81]V7502 [82]V8202 [83]V8802 [84]V10002 [85]V11102 [86]V12502 [87]V13702 [88]V14802 [89]V16302 [90]V17702 [91]V19002 [92]V20302 [93]V21602 [94]ER2002 [95]ER5002 [96]ER7002 [97]ER10002 [99]ER13002 [01]ER17002 [03]ER21002 [05]ER25002 [07]ER36002 [09]ER42002 [11]ER47302 [13]ER53002 [15]ER60002 [17]ER66002 [19]ER72002 [21]ER78002",
"wlthid || [84]S101 [89]S201 [94]S301 [99]S401 [01]S501 [03]S601 [05]S701 [07]S801"),
type = "separated") |>
dplyr::filter(year %in% year_toread)
ind_filename <- list.files(path = indir, pattern = "ind.*\\.rda")
load(file = file.path(indir, ind_filename), envir = temp_env)
ind_filename
library(tidyverse)
library(flextable)
library(texreg)
library(trelliscopejs)
library(plotly)
# Download data from SQLITE db, clean it up, and save it as parquet file
library(tictoc)
library(RSQLite)
setwd('/Users/tommy/Library/CloudStorage/Dropbox/03 Cowork/assortative-mating')
conn <- dbConnect(RSQLite::SQLite(), "data/acs.sqlite")
tic()
df <- dbGetQuery(conn,
"SELECT appu.ST, appu.PUMA, appu.SERIALNO , appu.SPORDER, appu.AGEP , appu.SEX, appu.RELSHIPP, appu.MAR, appu.MARHYP,
appu.MARHT, appu.SCHL , appu.PERNP, appu.PINCP , appu.OCCP , appu.INDP , appu.NAICSP , appu.POBP , appu.MIG, appu.MIGPUMA , appu.MIGSP , appu.PWGTP , aphu.WGTP,
mpms.msa_title  , mpms.x2010_population_of_msa AS msa_2010_population
FROM acs_pums_5_p_2019_us appu
LEFT JOIN MSA2013_PUMA2010_crosswalk mpc on appu.ST = mpc.state_fips_code  and appu.PUMA = mpc.puma_code
LEFT JOIN acs_pums_5_h_2019_us aphu ON appu.SERIALNO = aphu.SERIALNO
INNER JOIN MSA2013_PUMA2010_match_summary mpms ON mpc.msa_code = mpms.msa_code
WHERE mpms.sum_of_errors < 15
ORDER BY appu.SERIALNO
;
") %>% as_tibble
toc()
labs_val <- dbGetQuery(conn,
"SELECT *
FROM acs_pums_labels_value_2019 aplv;
") %>% as_tibble %>%
unique
label_var <- function(tb, var_name) {
var_labs_val <- labs_val %>% filter(variable==var_name, value_from==value_to) %>% select(value=value_from, label)
if(nrow(var_labs_val) == 0) return(tb)
joinby <- "value"
names(joinby) <- var_name
tb <- tb %>% left_join(var_labs_val, by=joinby)
tb[,var_name] = tb[, "label"]
tb %>% select(-label)
}
df <- Reduce(label_var, names(df)[df %>% map_chr(class) == "character"], df)
df <- df %>% mutate(SCHL= factor(SCHL, labs_val %>% filter(variable=="SCHL") %>% pull(label), ordered = T))
df <- df %>% mutate(SCHL5 = case_when(
is.na(SCHL) ~ NA,
SCHL <= "12th grade - no diploma" ~ "HS-",
SCHL == "Regular high school diploma" ~ "HS",
SCHL <= "Associate's degree" ~ "C-",
SCHL == "Bachelor's degree" ~ "C",
TRUE ~ "C+"
) %>%
factor(levels=c("HS-", "HS", "C-", "C", "C+" ), ordered = T)
)
df <- df %>% mutate(SCHL2 = case_when( SCHL5 >= "C-" ~ "C- or above", SCHL5 <= "HS" ~ "HS or below", .default = NA) %>%
factor(levels=c("HS or below", "C- or above" ), ordered = T)
)
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
df %>% arrow::write_parquet("data/acs_sanghoon.parquet")
dbDisconnect(conn)
df <- arrow::read_parquet("data/acs_sanghoon.parquet")
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
df <- dbGetQuery(conn,
"SELECT appu.ST, appu.PUMA, appu.SERIALNO , appu.SPORDER, appu.AGEP , appu.SEX, appu.RELSHIPP, appu.MAR, appu.MARHYP,
appu.MARHT, appu.SCHL , appu.PERNP, appu.PINCP , appu.OCCP , appu.INDP , appu.NAICSP , appu.POBP , appu.MIG, appu.MIGPUMA , appu.MIGSP , appu.PWGTP , aphu.WGTP,
mpms.msa_title  , mpms.x2010_population_of_msa AS msa_2010_population
FROM acs_pums_5_p_2019_us appu
LEFT JOIN MSA2013_PUMA2010_crosswalk mpc on appu.ST = mpc.state_fips_code  and appu.PUMA = mpc.puma_code
LEFT JOIN acs_pums_5_h_2019_us aphu ON appu.SERIALNO = aphu.SERIALNO
INNER JOIN MSA2013_PUMA2010_match_summary mpms ON mpc.msa_code = mpms.msa_code
WHERE mpms.sum_of_errors < 15
ORDER BY appu.SERIALNO
;
") %>% as_tibble
df <- dbGetQuery(conn,
"SELECT appu.ST, appu.PUMA, appu.SERIALNO , appu.SPORDER, appu.AGEP , appu.SEX, appu.RELSHIPP, appu.MAR, appu.MARHYP,
appu.MARHT, appu.SCHL , appu.PERNP, appu.PINCP , appu.OCCP , appu.INDP , appu.NAICSP , appu.POBP , appu.MIG, appu.MIGPUMA , appu.MIGSP , appu.PWGTP , aphu.WGTP,
mpms.msa_title  , mpms.x2010_population_of_msa AS msa_2010_population
FROM acs_pums_5_p_2019_us appu
LEFT JOIN MSA2013_PUMA2010_crosswalk mpc on appu.ST = mpc.state_fips_code  and appu.PUMA = mpc.puma_code
LEFT JOIN acs_pums_5_h_2019_us aphu ON appu.SERIALNO = aphu.SERIALNO
INNER JOIN MSA2013_PUMA2010_match_summary mpms ON mpc.msa_code = mpms.msa_code
WHERE mpms.sum_of_errors < 15
ORDER BY appu.SERIALNO
;
") %>% as_tibble
conn <- dbConnect(RSQLite::SQLite(), "data/acs.sqlite")
df <- dbGetQuery(conn,
"SELECT appu.ST, appu.PUMA, appu.SERIALNO , appu.SPORDER, appu.AGEP , appu.SEX, appu.RELSHIPP, appu.MAR, appu.MARHYP,
appu.MARHT, appu.SCHL , appu.PERNP, appu.PINCP , appu.OCCP , appu.INDP , appu.NAICSP , appu.POBP , appu.MIG, appu.MIGPUMA , appu.MIGSP , appu.PWGTP , aphu.WGTP,
mpms.msa_title  , mpms.x2010_population_of_msa AS msa_2010_population
FROM acs_pums_5_p_2019_us appu
LEFT JOIN MSA2013_PUMA2010_crosswalk mpc on appu.ST = mpc.state_fips_code  and appu.PUMA = mpc.puma_code
LEFT JOIN acs_pums_5_h_2019_us aphu ON appu.SERIALNO = aphu.SERIALNO
INNER JOIN MSA2013_PUMA2010_match_summary mpms ON mpc.msa_code = mpms.msa_code
WHERE mpms.sum_of_errors < 15
ORDER BY appu.SERIALNO
;
") %>% as_tibble
labs_val <- dbGetQuery(conn,
"SELECT *
FROM acs_pums_labels_value_2019 aplv;
") %>% as_tibble %>%
unique
label_var <- function(tb, var_name) {
var_labs_val <- labs_val %>% filter(variable==var_name, value_from==value_to) %>% select(value=value_from, label)
if(nrow(var_labs_val) == 0) return(tb)
joinby <- "value"
names(joinby) <- var_name
tb <- tb %>% left_join(var_labs_val, by=joinby)
tb[,var_name] = tb[, "label"]
tb %>% select(-label)
}
df <- Reduce(label_var, names(df)[df %>% map_chr(class) == "character"], df)
df <- df %>% mutate(SCHL= factor(SCHL, labs_val %>% filter(variable=="SCHL") %>% pull(label), ordered = T))
df <- df %>% mutate(SCHL5 = case_when(
is.na(SCHL) ~ NA,
SCHL <= "12th grade - no diploma" ~ "HS-",
SCHL == "Regular high school diploma" ~ "HS",
SCHL <= "Associate's degree" ~ "C-",
SCHL == "Bachelor's degree" ~ "C",
TRUE ~ "C+"
) %>%
factor(levels=c("HS-", "HS", "C-", "C", "C+" ), ordered = T)
)
df <- df %>% mutate(SCHL2 = case_when( SCHL5 >= "C-" ~ "C- or above", SCHL5 <= "HS" ~ "HS or below", .default = NA) %>%
factor(levels=c("HS or below", "C- or above" ), ordered = T)
)
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
msa_pop <- readxl::read_excel("data/puma_msa_crosswalk/MSA2013_PUMA2010_match_summary.xlsx") %>% janitor::clean_names() %>%
select(msa_title, msa_2010_population=x2010_population_of_msa)
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
df %>% arrow::write_parquet("data/acs_sanghoon.parquet")
dbDisconnect(conn)
df <- arrow::read_parquet("data/acs_sanghoon.parquet")
top_msas <- function(n) msa_pop %>% slice_max(msa_2010_population, n=n) %>% pull(msa_title)
singles <- df %>% filter(
MAR =="Never married or under 15 years old",
AGEP >= 18, AGEP < 40,
! is.na(SCHL5)
)
singles %>% filter(msa_title %in% top_msas(15)) %>%
count(msa_title, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
ggplot(aes(msa_title %>% fct_reorder(fm_ratio), fm_ratio)) + geom_col() +
labs(x=NULL, y="Female-Male Ratio", fill=NULL) +
coord_flip(ylim=c(0.75, 0.95))
singles %>% filter(msa_title %in% top_msas(15)) %>%
count(msa_title, SEX, AGEP, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
ggplot(aes(AGEP, fm_ratio, color=msa_title)) + geom_line(alpha=0.3) + geom_smooth(se=F) +
labs(x=NULL, y="Female-Male Ratio", fill=NULL)
(singles %>% filter(msa_title %in% top_msas(15)) %>%
count(msa_title, SEX, AGEP, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
ggplot(aes(AGEP, fm_ratio, color=msa_title)) + geom_smooth(se=F) +
labs(x=NULL, y="Female-Male Ratio", fill=NULL)) %>% ggplotly
(singles %>% filter(msa_title %in% top_msas(15)) %>%
count(msa_title, SEX, AGEP, SCHL2, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
ggplot(aes(AGEP, fm_ratio, color=msa_title)) + geom_smooth(, se=F) +
labs(x=NULL, y="Female-Male Ratio", fill=NULL) + facet_wrap(~SCHL2, scales="free_y")) %>%
ggplotly()
(singles %>% filter(msa_title %in% top_msas(15)) %>%
count(msa_title, SEX, SCHL5, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
ggplot(aes(SCHL5, fm_ratio, fill = msa_title)) + geom_col(position = "dodge") +
labs(x=NULL, y="Female-Male Ratio", fill=NULL)) %>%
ggplotly
2
fm_ratio_ind <- df %>% count(NAICSP, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>%
transmute(NAICSP, n=Female + Male, fm_ratio_ind = Female / Male)
?ggplotly
fm_ratio_ind <- df %>% count(NAICSP, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>%
transmute(NAICSP, n=Female + Male, fm_ratio_ind = Female / Male)
tbl <- fm_ratio_ind %>% arrange(desc(fm_ratio_ind)) %>% mutate(fm_ratio_ind = fm_ratio_ind %>% round(2)) %>%
flextable(cwidth = 8)    #Industry-wise fm_ratio
ind_share_nation <- df %>% filter(!is.na(NAICSP)) %>% count(NAICSP, wt=PWGTP) %>% transmute(NAICSP, share_nation = n/sum(n))
basic_ind_msa <- df %>% filter(msa_title %in% top_msas(100), ! is.na(NAICSP)) %>%
count(msa_title, NAICSP, wt=PWGTP) %>%
group_by(msa_title) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(msa_title, NAICSP, n, lq_ind) %>%
group_by(msa_title) %>% slice_max(lq_ind, n=20)
tbl
ind_share_nation
df
df
df %>% filter(msa_title %in% top_msas(100), !is.na(NAICSP)) %>% count(msa_title, NAICSP, wt = PWGTP)
df %>% filter(msa_title %in% top_msas(100), !is.na(NAICSP)) %>% count(msa_title, NAICSP, wt = PWGTP) %>% group_by(msa_title) %>% mutate(share = n/sum(n))
ind_share_nation
df %>% filter(msa_title %in% top_msas(100), ! is.na(NAICSP)) %>%
count(msa_title, NAICSP, wt=PWGTP) %>%
group_by(msa_title) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation)
df %>% count(msa_title, NAICSP, wt=PWGTP) %>% left_join(fm_ratio_ind %>% select(-n), by="NAICSP")
source("~/.active-rstudio-document", echo=TRUE)
msa_pop
fm_ratio_ind
getwd()
fm_ratio_ind %>% write_rds('/Users/tommy/Desktop/02 Research/02 Data/psid/data/fm_ratio_ind.rds')
ind_share_nation %>% write_rds('/Users/tommy/Desktop/02 Research/02 Data/psid/data/ind_share_nation.rds')
fm_ratio_vs_fm_ratio_hat <- singles %>% #filter(msa_title %in% top_msas(500)) %>%
count(msa_title, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
left_join(fm_ratio_hat)
fm_ratio_hat <- df %>% count(msa_title, NAICSP, wt=PWGTP) %>% left_join(fm_ratio_ind %>% select(-n), by="NAICSP") %>%
group_by(msa_title) %>% summarise(fm_ratio_hat = weighted.mean(fm_ratio_ind, w=n))
fm_ratio_vs_fm_ratio_hat <- singles %>% #filter(msa_title %in% top_msas(500)) %>%
count(msa_title, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
left_join(fm_ratio_hat)
fm_ratio_vs_fm_ratio_hat %>%
ggplot(aes(fm_ratio_hat, fm_ratio)) + geom_point() + geom_smooth(se=F, method = "lm")
df %>% filter(AGEP <= 50) %>%
group_by(AGEP, SEX) %>%
summarise(share_married = weighted.mean(MAR == "Married", wt=PWGTP)) %>%
ggplot(aes(AGEP, share_married, color = SEX)) + geom_line()
df %>% filter(msa_title %>% str_detect( "Seattle") ) %>%
filter(SPORDER %in% c(1,2), MAR=="Married") %>%
pivot_wider(id_cols=SERIALNO, names_prefix = "SPORDER", names_from = "SPORDER", values_from = "MIGSP") %>% count(SPORDER1, SPORDER2, sort=T) %>% View()
.df %>% filter(MARHT == "One time") %>%
mutate(MAR_AGE = AGEP - (2019 - MARHYP)) %>%
group_by(msa_title) %>% summarise(mean_MAR_AGE = weighted.mean(MAR_AGE, w = PWGTP), median_MAR_AGE = median(MAR_AGE)) %>%
left_join(fm_ratio_vs_fm_ratio_hat, by = "msa_title") %>%
lm(mean_MAR_AGE ~ fm_ratio, data = .) %>% broom::tidy()} )) %>%
(df %>% filter(MARHT == "One time") %>% filter(SCHL5 == "C", msa_title %in% top_msas(15)) %>%
mutate(msa_title = msa_title %>% factor(levels=fm_ratio_hat %>% arrange(fm_ratio_hat) %>% pull(msa_title) )) %>%
mutate(MAR_AGE = AGEP - (2019 - MARHYP)) %>%
ggplot() + geom_density(aes(MAR_AGE, color = msa_title, weight = PWGTP), bw=1, alpha=0.5, linewidth = 1) + facet_wrap(~SEX) +
coord_cartesian(xlim=c(20,30)) + scale_color_viridis_d()) %>%
ggplotly
basic_ind_msa <- df %>% filter(msa_title %in% top_msas(100), ! is.na(NAICSP)) %>%
count(msa_title, NAICSP, wt=PWGTP) %>%
group_by(msa_title) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(msa_title, NAICSP, n, lq_ind) %>%
group_by(msa_title) %>% slice_max(lq_ind, n=20)
tbl <- basic_ind_msa %>% mutate(lq_ind = lq_ind %>% round(2)) %>% flextable(cwidth=8)
df
df %>% select(msa_title)
df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state)
df %>% mutate(state = msa_title %>% str_extract("(?<=,\\s).*")) %>% select(state)
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(statee, NAICSP, n, lq_ind) %>%
group_by(state) %>% slice_max(lq_ind, n=20)
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(statee, NAICSP, n, lq_ind) %>%
group_by(state)
df <- arrow::read_parquet("data/acs_sanghoon.parquet")
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(statee, NAICSP, n, lq_ind) %>%
group_by(state)
conn <- dbConnect(RSQLite::SQLite(), "data/acs.sqlite")
df <- dbGetQuery(conn,
"SELECT appu.ST, appu.PUMA, appu.SERIALNO , appu.SPORDER, appu.AGEP , appu.SEX, appu.RELSHIPP, appu.MAR, appu.MARHYP,
appu.MARHT, appu.SCHL , appu.PERNP, appu.PINCP , appu.OCCP , appu.INDP , appu.NAICSP , appu.POBP , appu.MIG, appu.MIGPUMA , appu.MIGSP , appu.PWGTP , aphu.WGTP,
mpms.msa_title  , mpms.x2010_population_of_msa AS msa_2010_population
FROM acs_pums_5_p_2019_us appu
LEFT JOIN MSA2013_PUMA2010_crosswalk mpc on appu.ST = mpc.state_fips_code  and appu.PUMA = mpc.puma_code
LEFT JOIN acs_pums_5_h_2019_us aphu ON appu.SERIALNO = aphu.SERIALNO
INNER JOIN MSA2013_PUMA2010_match_summary mpms ON mpc.msa_code = mpms.msa_code
WHERE mpms.sum_of_errors < 15
ORDER BY appu.SERIALNO
;
") %>% as_tibble
df <- Reduce(label_var, names(df)[df %>% map_chr(class) == "character"], df)
df <- df %>% mutate(SCHL= factor(SCHL, labs_val %>% filter(variable=="SCHL") %>% pull(label), ordered = T))
df %>% names()
df <- df %>% mutate(SCHL5 = case_when(
is.na(SCHL) ~ NA,
SCHL <= "12th grade - no diploma" ~ "HS-",
SCHL == "Regular high school diploma" ~ "HS",
SCHL <= "Associate's degree" ~ "C-",
SCHL == "Bachelor's degree" ~ "C",
TRUE ~ "C+"
) %>%
factor(levels=c("HS-", "HS", "C-", "C", "C+" ), ordered = T)
)
df <- df %>% mutate(SCHL2 = case_when( SCHL5 >= "C-" ~ "C- or above", SCHL5 <= "HS" ~ "HS or below", .default = NA) %>%
factor(levels=c("HS or below", "C- or above" ), ordered = T)
)
df <- df %>% mutate(msa_title = msa_title %>% factor(levels= msa_pop %>% arrange(desc(msa_2010_population)) %>% pull(msa_title)))
msa_pop <- readxl::read_excel("data/puma_msa_crosswalk/MSA2013_PUMA2010_match_summary.xlsx") %>% janitor::clean_names() %>%
select(msa_title, msa_2010_population=x2010_population_of_msa)
ind_share_nation <- df %>% filter(!is.na(NAICSP)) %>% count(NAICSP, wt=PWGTP) %>% transmute(NAICSP, share_nation = n/sum(n))
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(statee, NAICSP, n, lq_ind) %>%
group_by(state)
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(statee, NAICSP, n, lq_ind) %>%
group_by(state)
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(state, NAICSP, n, lq_ind) %>%
group_by(state)
basic_ind_state
df
basic_ind_state %>% filter(!is.na(state))
df %>% mutate(state = msa_title %>% str_extract(',.$'))
df %>% mutate(state = msa_title %>% str_extract(',.$')) %>% select(state)
basic_ind_state <- df %>% mutate(state = msa_title %>% str_extract("(?<=,\\s).*")) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt=PWGTP) %>%
group_by(state) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(state, NAICSP, n, lq_ind) %>%
group_by(state)
basic_ind_state
write_rds('/Users/tommy/Desktop/02 Research/02 Data/psid/data/basic_ind_state.rds')
write_rds(basic_ind_state, '/Users/tommy/Desktop/02 Research/02 Data/psid/data/basic_ind_state.rds')
#-----------
fm_ratio_hat <- df %>% count(state, NAICSP, wt = PWGTP) %>% left_join(fm_ratio_ind %>% select(-n), by = 'NAICSP') %>%
group_by(state) %>% summarise(fm_ratio_hat = weighted.mean(fm_ratio_ind, w=n))
#-----------
fm_ratio_hat <- df %>%  mutate(state = msa_title %>% str_extract("(?<=,\\s).*")) %>% filter(!is.na(NAICSP)) %>%
count(state, NAICSP, wt = PWGTP) %>% left_join(fm_ratio_ind %>% select(-n), by = 'NAICSP') %>%
group_by(state) %>% summarise(fm_ratio_hat = weighted.mean(fm_ratio_ind, w=n))
write_rds(fm_ratio_hat, '/Users/tommy/Desktop/02 Research/02 Data/psid/data/fm_ratio_hat.rds')
library(tidyverse)
library(flextable)
library(texreg)
library(trelliscopejs)
library(plotly)
# Download data from SQLITE db, clean it up, and save it as parquet file
library(tictoc)
library(RSQLite)
setwd('/Users/tommy/Library/CloudStorage/Dropbox/03 Cowork/assortative-mating')
conn <- dbConnect(RSQLite::SQLite(), "data/acs.sqlite")
df <- arrow::read_parquet("data/acs_sanghoon.parquet")
msa_pop <- readxl::read_excel("data/puma_msa_crosswalk/MSA2013_PUMA2010_match_summary.xlsx") %>% janitor::clean_names() %>%
select(msa_title, msa_2010_population=x2010_population_of_msa)
top_msas <- function(n) msa_pop %>% slice_max(msa_2010_population, n=n) %>% pull(msa_title)
fm_ratio_ind <- df %>% count(NAICSP, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>%
transmute(NAICSP, n=Female + Male, fm_ratio_ind = Female / Male)
fm_ratio_ind
fm_ratio_ind %>% summary()
ind_share_nation <- df %>% filter(!is.na(NAICSP)) %>% count(NAICSP, wt=PWGTP) %>% transmute(NAICSP, share_nation = n/sum(n))
basic_ind_msa <- df %>% filter(msa_title %in% top_msas(100), ! is.na(NAICSP)) %>%
count(msa_title, NAICSP, wt=PWGTP) %>%
group_by(msa_title) %>% mutate(share= n/sum(n)) %>%
left_join(ind_share_nation) %>% mutate(lq_ind = share / share_nation) %>%
select(msa_title, NAICSP, n, lq_ind) %>%
group_by(msa_title) %>% slice_max(lq_ind, n=20)
fm_ratio_hat <- df %>% count(msa_title, NAICSP, wt=PWGTP) %>% left_join(fm_ratio_ind %>% select(-n), by="NAICSP") %>%
group_by(msa_title) %>% summarise(fm_ratio_hat = weighted.mean(fm_ratio_ind, w=n))
fm_ratio_hat
fm_ratio_hat %>% summary()
fm_ratio_vs_fm_ratio_hat <- singles %>% #filter(msa_title %in% top_msas(500)) %>%
count(msa_title, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
left_join(fm_ratio_hat)
fm_ratio_vs_fm_ratio_hat %>%
ggplot(aes(fm_ratio_hat, fm_ratio)) + geom_point() + geom_smooth(se=F, method = "lm")
singles <- df %>% filter(
MAR =="Never married or under 15 years old",
AGEP >= 18, AGEP < 40,
! is.na(SCHL5)
)
fm_ratio_vs_fm_ratio_hat <- singles %>% #filter(msa_title %in% top_msas(500)) %>%
count(msa_title, SEX, wt=PWGTP) %>% pivot_wider(names_from = "SEX", values_from = "n") %>% mutate(fm_ratio = Female/Male) %>%
left_join(fm_ratio_hat)
fm_ratio_vs_fm_ratio_hat %>%
ggplot(aes(fm_ratio_hat, fm_ratio)) + geom_point() + geom_smooth(se=F, method = "lm")
## Sample Data Analysis {background-image='images/main.jpg}
```{r, include=FALSE}
